@model Neverwinter.Models.Character
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Character</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Basic Info -->
        <!-- Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Gender -->
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Gender, (IList<SelectListItem>)ViewBag.GenderList, "--Select Gender--")
                </div>
            </div>
        </div>

        <!-- Race -->
        <div class="form-group">
            @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Race, (IList<SelectListItem>)ViewBag.RaceList, "--Select Race--")
                </div>
            </div>
        </div>

        <!-- Profession -->
        <div class="form-group">
            @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Profession, (IList<SelectListItem>)ViewBag.ProfessionList, "--Select Profession--")
                </div>
            </div>
        </div>

        <!-- Attribute Info -->
        <!-- Power -->
        <div class="form-group">
            @Html.LabelFor(model => model.Power, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Power, "10", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Power, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Toughness -->
        <div class="form-group">
            @Html.LabelFor(model => model.Toughness, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Toughness, "10", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Toughness, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Agility -->
        <div class="form-group">
            @Html.LabelFor(model => model.Agility, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Agility, "10", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Agility, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Knowledge -->
        <div class="form-group">
            @Html.LabelFor(model => model.Knowledge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Knowledge, "10", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Knowledge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}